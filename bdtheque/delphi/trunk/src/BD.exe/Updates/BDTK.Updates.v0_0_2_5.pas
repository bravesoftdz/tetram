unit BDTK.Updates.v0_0_2_5;

interface

implementation

uses
  UIB, BDTK.Updates;

procedure MAJ0_0_2_5(Query: TUIBScript);
begin
  Query.Script.Clear;
  Query.Script.Add('ALTER TABLE ALBUMS ADD TOMEDEBUT SMALLINT, ADD TOMEFIN SMALLINT;');
  Query.Script.Add('alter table ALBUMS alter REFALBUM position 1,');
  Query.Script.Add('                   alter TITREALBUM position 2,');
  Query.Script.Add('                   alter ANNEEPARUTION position 3,');
  Query.Script.Add('                   alter REFSERIE position 4,');
  Query.Script.Add('                   alter TOME position 5,');
  Query.Script.Add('                   alter TOMEDEBUT position 6,');
  Query.Script.Add('                   alter TOMEFIN position 7,');
  Query.Script.Add('                   alter HORSSERIE position 8,');
  Query.Script.Add('                   alter INTEGRALE position 9,');
  Query.Script.Add('                   alter SUJETALBUM position 10,');
  Query.Script.Add('                   alter REMARQUESALBUM position 11,');
  Query.Script.Add('                   alter TITREINITIALESALBUM position 12,');
  Query.Script.Add('                   alter UPPERTITREALBUM position 13,');
  Query.Script.Add('                   alter UPPERSUJETALBUM position 14,');
  Query.Script.Add('                   alter UPPERREMARQUESALBUM position 15,');
  Query.Script.Add('                   alter SOUNDEXTITREALBUM position 16,');
  Query.Script.Add('                   alter INITIALETITREALBUM position 17;');

  Query.Script.Add('ALTER PROCEDURE PREVISIONS_SORTIES(');
  Query.Script.Add('    INTEGRAL SMALLINT)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    UPPERTITRESERIE VARCHAR(150),');
  Query.Script.Add('    TOME INTEGER,');
  Query.Script.Add('    ANNEEPARUTION INTEGER,');
  Query.Script.Add('    REFEDITEUR INTEGER,');
  Query.Script.Add('    NOMEDITEUR VARCHAR(50),');
  Query.Script.Add('    REFCOLLECTION INTEGER,');
  Query.Script.Add('    NOMCOLLECTION VARCHAR(50))');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE CURRENTREFSERIE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE OLDREFSERIE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE CURRENTTOME INTEGER;');
  Query.Script.Add('DECLARE VARIABLE MAXTOME INTEGER;');
  Query.Script.Add('DECLARE VARIABLE MAXTOME2 INTEGER;');
  Query.Script.Add('DECLARE VARIABLE SOMMEPONDEREE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE COMPTEALBUM INTEGER;');
  Query.Script.Add('DECLARE VARIABLE CURRENTANNEE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE MAXANNEE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE TOMEPRECEDENT INTEGER;');
  Query.Script.Add('DECLARE VARIABLE ANNEEPRECEDENTE INTEGER;');
  Query.Script.Add('begin');
  Query.Script.Add('  oldrefserie = -1;');
  Query.Script.Add('  tomeprecedent = -1;');
  Query.Script.Add('  anneeprecedente = -1;');
  Query.Script.Add('  for select TOME, ANNEEPARUTION, s.RefSerie from');
  Query.Script.Add('        albums a inner join series s on s.refserie = a.refserie');
  Query.Script.Add('        where (s.terminee is null or s.terminee <> 1)');
  Query.Script.Add('        and a.horsserie = 0 and a.integrale = 0 and a.anneeparution is not null');
  Query.Script.Add('        order by s.refserie, TOME');
  Query.Script.Add('        into');
  Query.Script.Add('          :CURRENTTOME,');
  Query.Script.Add('          :CURRENTANNEE,');
  Query.Script.Add('          :CURRENTREFSERIE');
  Query.Script.Add('  do begin');
  Query.Script.Add('    if (currentrefserie <> oldrefserie) then begin');
  Query.Script.Add('');
  Query.Script.Add('      if (oldrefserie <> -1 and comptealbum > 0) then begin');
  Query.Script.Add('        select MAX(TOME) + 1, MAX(ANNEEPARUTION) from albums');
  Query.Script.Add('        where horsserie = 0 and integrale = 0 and refserie = :oldrefserie');
  Query.Script.Add('        into');
  Query.Script.Add('          :TOME,');
  Query.Script.Add('          :MAXANNEE;');
  Query.Script.Add('');
  Query.Script.Add('        if (INTEGRAL = 1) then begin');
  Query.Script.Add('          select max(tomefin) + 1 from albums');
  Query.Script.Add('          where integrale = 1 and refserie = :oldrefserie');
  Query.Script.Add('          into');
  Query.Script.Add('            :MAXTOME2;');
  Query.Script.Add('');
  Query.Script.Add('          if (maxtome2 > tome) then tome = maxtome2;');
  Query.Script.Add('        end');
  Query.Script.Add('');
  Query.Script.Add('        select s.RefSerie, s.TitreSerie, s.UpperTitreSerie, e.RefEditeur, e.NomEditeur, c.RefCollection, c.NomCollection from');
  Query.Script.Add('          series s left join editeurs e on e.refediteur = s.refediteur');
  Query.Script.Add('                   left join collections c on c.refcollection = s.refcollection');
  Query.Script.Add('        where s.RefSerie = :oldrefserie');
  Query.Script.Add('        into');
  Query.Script.Add('          :REFSERIE,');
  Query.Script.Add('          :TITRESERIE,');
  Query.Script.Add('          :UPPERTITRESERIE,');
  Query.Script.Add('          :REFEDITEUR,');
  Query.Script.Add('          :NOMEDITEUR,');
  Query.Script.Add('          :REFCOLLECTION,');
  Query.Script.Add('          :NOMCOLLECTION;');
  Query.Script.Add('');
  Query.Script.Add('        ANNEEPARUTION = maxannee + ((tome - maxtome) * (sommeponderee / comptealbum));');
  Query.Script.Add('        suspend;');
  Query.Script.Add('      end');
  Query.Script.Add('');
  Query.Script.Add('      oldrefserie = currentrefserie;');
  Query.Script.Add('      sommeponderee = 0;');
  Query.Script.Add('      comptealbum = 0;');
  Query.Script.Add('      tomeprecedent = -1;');
  Query.Script.Add('      anneeprecedente = -1;');
  Query.Script.Add('    end');
  Query.Script.Add('    if (tomeprecedent <> -1) then begin');
  Query.Script.Add('      /* non pondéré: sommeponderee = sommeponderee + ((CURRENTANNEE - ANNEEPRECEDENTE) / (CURRENTTOME - TOMEPRECEDENT)); */');
  Query.Script.Add('      sommeponderee = sommeponderee + ((CURRENTANNEE - ANNEEPRECEDENTE) / (CURRENTTOME - TOMEPRECEDENT)) * CURRENTTOME;');
  Query.Script.Add('      /* non pondéré: comptealbum = comptealbum + 1;*/');
  Query.Script.Add('      comptealbum = comptealbum + CURRENTTOME;');
  Query.Script.Add('    end');
  Query.Script.Add('    tomeprecedent = CURRENTTOME;');
  Query.Script.Add('    anneeprecedente = CURRENTANNEE;');
  Query.Script.Add('    maxtome = CURRENTTOME;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_AUTEUR(');
  Query.Script.Add('    REFAUTEUR INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    METIER SMALLINT)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_SERIE(');
  Query.Script.Add('    SERIE INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ANNEES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    ANNEEPARUTION INTEGER,');
  Query.Script.Add('    COUNTANNEE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE SERIES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    COUNTSERIE INTEGER,');
  Query.Script.Add('    REFSERIE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE COLLECTIONS_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    NOMCOLLECTION VARCHAR(50),');
  Query.Script.Add('    COUNTCOLLECTION INTEGER,');
  Query.Script.Add('    REFCOLLECTION INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE EDITEURS_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    NOMEDITEUR VARCHAR(50),');
  Query.Script.Add('    COUNTEDITEUR INTEGER,');
  Query.Script.Add('    REFEDITEUR INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE GENRES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    GENRE VARCHAR(30),');
  Query.Script.Add('    COUNTGENRE INTEGER,');
  Query.Script.Add('    REFGENRE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  EXIT;');
  Query.Script.Add('END;');

  Query.Script.Add('DROP VIEW VW_LISTE_GENRES_ALBUMS;');
  Query.Script.Add('DROP VIEW VW_LISTE_EDITEURS_ALBUMS;');
  Query.Script.Add('DROP VIEW VW_LISTE_COLLECTIONS_ALBUMS;');
  Query.Script.Add('DROP VIEW VW_LISTE_ALBUMS;');

  Query.Script.Add('CREATE VIEW VW_LISTE_ALBUMS(');
  Query.Script.Add('    REFALBUM,');
  Query.Script.Add('    TITREALBUM,');
  Query.Script.Add('    TOME,');
  Query.Script.Add('    TOMEDEBUT,');
  Query.Script.Add('    TOMEFIN,');
  Query.Script.Add('    HORSSERIE,');
  Query.Script.Add('    INTEGRALE,');
  Query.Script.Add('    ANNEEPARUTION,');
  Query.Script.Add('    REFSERIE,');
  Query.Script.Add('    TITRESERIE,');
  Query.Script.Add('    UPPERTITREALBUM,');
  Query.Script.Add('    UPPERTITRESERIE)');
  Query.Script.Add('AS');
  Query.Script.Add('select a.REFALBUM,');
  Query.Script.Add('       a.TITREALBUM,');
  Query.Script.Add('       a.TOME,');
  Query.Script.Add('       a.TOMEDEBUT,');
  Query.Script.Add('       a.TOMEFIN,');
  Query.Script.Add('       a.HORSSERIE,');
  Query.Script.Add('       a.INTEGRALE,');
  Query.Script.Add('       a.ANNEEPARUTION,');
  Query.Script.Add('       a.REFSERIE,');
  Query.Script.Add('       s.TITRESERIE,');
  Query.Script.Add('       a.UPPERTITREALBUM,');
  Query.Script.Add('       s.UPPERTITRESERIE');
  Query.Script.Add('FROM ALBUMS a INNER JOIN SERIES s ON s.refserie = a.refserie;');

  Query.Script.Add('CREATE VIEW VW_LISTE_COLLECTIONS_ALBUMS(');
  Query.Script.Add('    REFALBUM,');
  Query.Script.Add('    TITREALBUM,');
  Query.Script.Add('    TOME,');
  Query.Script.Add('    TOMEDEBUT,');
  Query.Script.Add('    TOMEFIN,');
  Query.Script.Add('    HORSSERIE,');
  Query.Script.Add('    INTEGRALE,');
  Query.Script.Add('    ANNEEPARUTION,');
  Query.Script.Add('    REFSERIE,');
  Query.Script.Add('    TITRESERIE,');
  Query.Script.Add('    UPPERTITREALBUM,');
  Query.Script.Add('    REFCOLLECTION,');
  Query.Script.Add('    NOMCOLLECTION,');
  Query.Script.Add('    UPPERNOMCOLLECTION)');
  Query.Script.Add('AS');
  Query.Script.Add('select a.REFALBUM,');
  Query.Script.Add('       a.TITREALBUM,');
  Query.Script.Add('       a.TOME,');
  Query.Script.Add('       a.TOMEDEBUT,');
  Query.Script.Add('       a.TOMEFIN,');
  Query.Script.Add('       a.HORSSERIE,');
  Query.Script.Add('       a.INTEGRALE,');
  Query.Script.Add('       a.ANNEEPARUTION,');
  Query.Script.Add('       a.REFSERIE,');
  Query.Script.Add('       a.TITRESERIE,');
  Query.Script.Add('       a.UPPERTITREALBUM,');
  Query.Script.Add('       c.REFCOLLECTION,');
  Query.Script.Add('       c.NOMCOLLECTION,');
  Query.Script.Add('       c.UPPERNOMCOLLECTION');
  Query.Script.Add('FROM VW_LISTE_ALBUMS a LEFT JOIN EDITIONS e ON e.refalbum = a.refalbum');
  Query.Script.Add('                       LEFT JOIN COLLECTIONS c ON e.refcollection = c.refcollection;');

  Query.Script.Add('CREATE VIEW VW_LISTE_EDITEURS_ALBUMS(');
  Query.Script.Add('    REFALBUM,');
  Query.Script.Add('    TITREALBUM,');
  Query.Script.Add('    TOME,');
  Query.Script.Add('    TOMEDEBUT,');
  Query.Script.Add('    TOMEFIN,');
  Query.Script.Add('    HORSSERIE,');
  Query.Script.Add('    INTEGRALE,');
  Query.Script.Add('    ANNEEPARUTION,');
  Query.Script.Add('    REFSERIE,');
  Query.Script.Add('    TITRESERIE,');
  Query.Script.Add('    UPPERTITREALBUM,');
  Query.Script.Add('    REFEDITEUR,');
  Query.Script.Add('    NOMEDITEUR,');
  Query.Script.Add('    UPPERNOMEDITEUR)');
  Query.Script.Add('AS');
  Query.Script.Add('select a.REFALBUM,');
  Query.Script.Add('       a.TITREALBUM,');
  Query.Script.Add('       a.TOME,');
  Query.Script.Add('       a.TOMEDEBUT,');
  Query.Script.Add('       a.TOMEFIN,');
  Query.Script.Add('       a.HORSSERIE,');
  Query.Script.Add('       a.INTEGRALE,');
  Query.Script.Add('       a.ANNEEPARUTION,');
  Query.Script.Add('       a.REFSERIE,');
  Query.Script.Add('       a.TITRESERIE,');
  Query.Script.Add('       a.UPPERTITREALBUM,');
  Query.Script.Add('       e.REFEDITEUR,');
  Query.Script.Add('       e.NOMEDITEUR,');
  Query.Script.Add('       e.UPPERNOMEDITEUR');
  Query.Script.Add('FROM VW_LISTE_ALBUMS a LEFT JOIN EDITIONS ed ON ed.refalbum = a.refalbum');
  Query.Script.Add('                       LEFT JOIN EDITEURS e ON e.refediteur = ed.refediteur;');

  Query.Script.Add('CREATE VIEW VW_LISTE_GENRES_ALBUMS(');
  Query.Script.Add('    REFALBUM,');
  Query.Script.Add('    TITREALBUM,');
  Query.Script.Add('    TOME,');
  Query.Script.Add('    TOMEDEBUT,');
  Query.Script.Add('    TOMEFIN,');
  Query.Script.Add('    HORSSERIE,');
  Query.Script.Add('    INTEGRALE,');
  Query.Script.Add('    ANNEEPARUTION,');
  Query.Script.Add('    REFSERIE,');
  Query.Script.Add('    TITRESERIE,');
  Query.Script.Add('    UPPERTITREALBUM,');
  Query.Script.Add('    REFGENRE,');
  Query.Script.Add('    GENRE,');
  Query.Script.Add('    UPPERGENRE)');
  Query.Script.Add('AS');
  Query.Script.Add('select a.REFALBUM,');
  Query.Script.Add('       a.TITREALBUM,');
  Query.Script.Add('       a.TOME,');
  Query.Script.Add('       a.TOMEDEBUT,');
  Query.Script.Add('       a.TOMEFIN,');
  Query.Script.Add('       a.HORSSERIE,');
  Query.Script.Add('       a.INTEGRALE,');
  Query.Script.Add('       a.ANNEEPARUTION,');
  Query.Script.Add('       a.REFSERIE,');
  Query.Script.Add('       a.TITRESERIE,');
  Query.Script.Add('       a.UPPERTITREALBUM,');
  Query.Script.Add('       g.REFGENRE,');
  Query.Script.Add('       g.GENRE,');
  Query.Script.Add('       g.UPPERGENRE');
  Query.Script.Add('FROM VW_LISTE_ALBUMS a LEFT JOIN GENRESERIES gs ON gs.refserie = a.refserie');
  Query.Script.Add('                       LEFT JOIN GENRES g ON gs.refgenre = g.refgenre;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_AUTEUR(');
  Query.Script.Add('    REFAUTEUR INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    METIER SMALLINT)');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  for SELECT A.REFALBUM,');
  Query.Script.Add('             A.TITREALBUM,');
  Query.Script.Add('             A.TOME,');
  Query.Script.Add('             A.TOMEDEBUT,');
  Query.Script.Add('             A.TOMEFIN,');
  Query.Script.Add('             A.HORSSERIE,');
  Query.Script.Add('             A.INTEGRALE,');
  Query.Script.Add('             A.ANNEEPARUTION,');
  Query.Script.Add('             A.REFSERIE,');
  Query.Script.Add('             A.TITRESERIE,');
  Query.Script.Add('             AU.metier');
  Query.Script.Add('        FROM vw_liste_albums A INNER JOIN auteurs au on a.refalbum = au.refalbum');
  Query.Script.Add('        WHERE au.refpersonne = :RefAuteur');
  Query.Script.Add
    ('        ORDER BY UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, ANNEEPARUTION NULLS FIRST, UPPERTITREALBUM, METIER');
  Query.Script.Add('        INTO :REFALBUM,');
  Query.Script.Add('             :TITREALBUM,');
  Query.Script.Add('             :TOME,');
  Query.Script.Add('             :TOMEDEBUT,');
  Query.Script.Add('             :TOMEFIN,');
  Query.Script.Add('             :HORSSERIE,');
  Query.Script.Add('             :INTEGRALE,');
  Query.Script.Add('             :ANNEEPARUTION,');
  Query.Script.Add('             :REFSERIE,');
  Query.Script.Add('             :TITRESERIE,');
  Query.Script.Add('             :METIER');
  Query.Script.Add('      DO');
  Query.Script.Add('      BEGIN');
  Query.Script.Add('        SUSPEND;');
  Query.Script.Add('      END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_SERIE(');
  Query.Script.Add('    SERIE INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  FOR SELECT REFALBUM,');
  Query.Script.Add('             TITREALBUM,');
  Query.Script.Add('             TOME,');
  Query.Script.Add('             TOMEDEBUT,');
  Query.Script.Add('             TOMEFIN,');
  Query.Script.Add('             HORSSERIE,');
  Query.Script.Add('             INTEGRALE,');
  Query.Script.Add('             ANNEEPARUTION,');
  Query.Script.Add('             REFSERIE,');
  Query.Script.Add('             TITRESERIE');
  Query.Script.Add('      FROM vw_liste_albums');
  Query.Script.Add('      WHERE refserie = :serie');
  Query.Script.Add('      ORDER BY HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, ANNEEPARUTION NULLS FIRST, UPPERTITREALBUM');
  Query.Script.Add('      INTO :REFALBUM,');
  Query.Script.Add('           :TITREALBUM,');
  Query.Script.Add('           :TOME,');
  Query.Script.Add('           :TOMEDEBUT,');
  Query.Script.Add('           :TOMEFIN,');
  Query.Script.Add('           :HORSSERIE,');
  Query.Script.Add('           :INTEGRALE,');
  Query.Script.Add('           :ANNEEPARUTION,');
  Query.Script.Add('           :REFSERIE,');
  Query.Script.Add('           :TITRESERIE');
  Query.Script.Add('  DO');
  Query.Script.Add('  BEGIN');
  Query.Script.Add('    SUSPEND;');
  Query.Script.Add('  END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ANNEES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    ANNEEPARUTION INTEGER,');
  Query.Script.Add('    COUNTANNEE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('begin');
  Query.Script.Add('  for select');
  Query.Script.Add('    -1,');
  Query.Script.Add('    Count(REFALBUM)');
  Query.Script.Add('  from vw_liste_albums');
  Query.Script.Add('  where AnneeParution is null');
  Query.Script.Add('  group by AnneeParution');
  Query.Script.Add('  into :AnneeParution,');
  Query.Script.Add('       :countannee');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('');
  Query.Script.Add('  for select');
  Query.Script.Add('    AnneeParution,');
  Query.Script.Add('    Count(REFALBUM)');
  Query.Script.Add('  from vw_liste_albums');
  Query.Script.Add('  where AnneeParution is not null');
  Query.Script.Add('  group by AnneeParution');
  Query.Script.Add('  into :AnneeParution,');
  Query.Script.Add('       :countannee');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE SERIES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    COUNTSERIE INTEGER,');
  Query.Script.Add('    REFSERIE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('begin');
  Query.Script.Add('  for select');
  Query.Script.Add('    -1,');
  Query.Script.Add('    RefSerie,');
  Query.Script.Add('    Count(REFALBUM)');
  Query.Script.Add('  from vw_liste_albums');
  Query.Script.Add('  where TITRESerie is null');
  Query.Script.Add('  group by UPPERTITRESERIE, TITRESerie, RefSerie');
  Query.Script.Add('  into :TITRESerie,');
  Query.Script.Add('       :RefSerie,');
  Query.Script.Add('       :countSerie');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('');
  Query.Script.Add('  for select');
  Query.Script.Add('    TITRESerie,');
  Query.Script.Add('    RefSerie,');
  Query.Script.Add('    Count(REFALBUM)');
  Query.Script.Add('  from vw_liste_albums');
  Query.Script.Add('  where TITRESerie is not null');
  Query.Script.Add('  group by UPPERTITRESERIE, TITRESerie, RefSerie');
  Query.Script.Add('  into :TITRESerie,');
  Query.Script.Add('       :RefSerie,');
  Query.Script.Add('       :countSerie');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE COLLECTIONS_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    NOMCOLLECTION VARCHAR(50),');
  Query.Script.Add('    COUNTCOLLECTION INTEGER,');
  Query.Script.Add('    REFCOLLECTION INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('begin');
  Query.Script.Add('  for select');
  Query.Script.Add('    CAST(''-1'' AS VARCHAR(50)),');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    -1');
  Query.Script.Add('  from vw_liste_collections_albums');
  Query.Script.Add('  where REFCOLLECTION is null');
  Query.Script.Add('  group by uppernomcollection, nomCOLLECTION, refCOLLECTION');
  Query.Script.Add('  into :nomCOLLECTION,');
  Query.Script.Add('       :countCOLLECTION,');
  Query.Script.Add('       :RefCOLLECTION');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('');
  Query.Script.Add('  for select');
  Query.Script.Add('    nomCOLLECTION,');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    RefCOLLECTION');
  Query.Script.Add('  from vw_liste_collections_albums');
  Query.Script.Add('  where REFCOLLECTION is not null');
  Query.Script.Add('  group by uppernomcollection, nomCOLLECTION, refCOLLECTION');
  Query.Script.Add('  into :nomCOLLECTION,');
  Query.Script.Add('       :countCOLLECTION,');
  Query.Script.Add('       :RefCOLLECTION');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE EDITEURS_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    NOMEDITEUR VARCHAR(50),');
  Query.Script.Add('    COUNTEDITEUR INTEGER,');
  Query.Script.Add('    REFEDITEUR INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('begin');
  Query.Script.Add('  for select');
  Query.Script.Add('    CAST(''-1'' AS VARCHAR(50)),');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    RefEditeur');
  Query.Script.Add('  from vw_liste_editeurs_albums');
  Query.Script.Add('  where REFEDITEUR is null');
  Query.Script.Add('  group by uppernomediteur, nomediteur, refediteur');
  Query.Script.Add('  into :nomediteur,');
  Query.Script.Add('       :countediteur,');
  Query.Script.Add('       :RefEditeur');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('');
  Query.Script.Add('  for select');
  Query.Script.Add('    nomediteur,');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    RefEditeur');
  Query.Script.Add('  from vw_liste_editeurs_albums');
  Query.Script.Add('  where REFEDITEUR is not null');
  Query.Script.Add('  group by uppernomediteur, nomediteur, refediteur');
  Query.Script.Add('  into :nomediteur,');
  Query.Script.Add('       :countediteur,');
  Query.Script.Add('       :RefEditeur');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE GENRES_ALBUMS');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    GENRE VARCHAR(30),');
  Query.Script.Add('    COUNTGENRE INTEGER,');
  Query.Script.Add('    REFGENRE INTEGER)');
  Query.Script.Add('AS');
  Query.Script.Add('begin');
  Query.Script.Add('  for select');
  Query.Script.Add('    CAST(''-1'' AS VARCHAR(30)),');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    -1');
  Query.Script.Add('  from vw_liste_genres_albums');
  Query.Script.Add('  where REFGENRE is null');
  Query.Script.Add('  group by uppergenre, Genre, refgenre');
  Query.Script.Add('  into :genre,');
  Query.Script.Add('       :countgenre,');
  Query.Script.Add('       :refgenre');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('');
  Query.Script.Add('  for select');
  Query.Script.Add('    Genre,');
  Query.Script.Add('    Count(REFALBUM),');
  Query.Script.Add('    refgenre');
  Query.Script.Add('  from vw_liste_genres_albums');
  Query.Script.Add('  where REFGENRE is not null');
  Query.Script.Add('  group by uppergenre, Genre, refgenre');
  Query.Script.Add('  into :genre,');
  Query.Script.Add('       :countgenre,');
  Query.Script.Add('       :refgenre');
  Query.Script.Add('  do begin');
  Query.Script.Add('    suspend;');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_ANNEE (');
  Query.Script.Add('    ANNEE INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE SWHERE VARCHAR(25);');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  if (:Annee = -1) then sWhere = ''ANNEEPARUTION is null '';');
  Query.Script.Add('                   else sWhere = ''ANNEEPARUTION = '' || :ANNEE;');
  Query.Script.Add('  for execute statement');
  Query.Script.Add('      ''SELECT REFALBUM,');
  Query.Script.Add('             TITREALBUM,');
  Query.Script.Add('             TOME,');
  Query.Script.Add('             TOMEDEBUT,');
  Query.Script.Add('             TOMEFIN,');
  Query.Script.Add('             HORSSERIE,');
  Query.Script.Add('             INTEGRALE,');
  Query.Script.Add('             ANNEEPARUTION,');
  Query.Script.Add('             REFSERIE,');
  Query.Script.Add('             TITRESERIE');
  Query.Script.Add('        FROM vw_liste_albums');
  Query.Script.Add('        WHERE '' || :sWHERE ||');
  Query.Script.Add
    ('        ''ORDER BY UPPERTITREALBUM, UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, TOMEDEBUT NULLS FIRST, TOMEFIN NULLS FIRST, ANNEEPARUTION NULLS FIRST''');
  Query.Script.Add('        INTO :REFALBUM,');
  Query.Script.Add('             :TITREALBUM,');
  Query.Script.Add('             :TOME,');
  Query.Script.Add('             :TOMEDEBUT,');
  Query.Script.Add('             :TOMEFIN,');
  Query.Script.Add('             :HORSSERIE,');
  Query.Script.Add('             :INTEGRALE,');
  Query.Script.Add('             :ANNEEPARUTION,');
  Query.Script.Add('             :REFSERIE,');
  Query.Script.Add('             :TITRESERIE');
  Query.Script.Add('      DO');
  Query.Script.Add('      BEGIN');
  Query.Script.Add('        SUSPEND;');
  Query.Script.Add('      END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_COLLECTION (');
  Query.Script.Add('    REFCOLLECTION INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE SWHERE VARCHAR(30);');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  if (:refCOLLECTION = -1) then sWhere = ''e.refCOLLECTION is null '';');
  Query.Script.Add('                           else sWhere = ''e.refCOLLECTION = '' || :refCOLLECTION;');
  Query.Script.Add('  for execute statement');
  Query.Script.Add('      ''SELECT a.REFALBUM,');
  Query.Script.Add('             a.TITREALBUM,');
  Query.Script.Add('             a.TOME,');
  Query.Script.Add('             a.TOMEDEBUT,');
  Query.Script.Add('             a.TOMEFIN,');
  Query.Script.Add('             a.HORSSERIE,');
  Query.Script.Add('             a.INTEGRALE,');
  Query.Script.Add('             a.ANNEEPARUTION,');
  Query.Script.Add('             a.REFSERIE,');
  Query.Script.Add('             s.TITRESERIE');
  Query.Script.Add('      from albums a left join editions e on a.refalbum = e.refalbum');
  Query.Script.Add('                    left join series s on a.refserie = s.refserie');
  Query.Script.Add('      WHERE '' || :sWHERE ||');
  Query.Script.Add
    ('     ''ORDER BY UPPERTITREALBUM, UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, TOMEDEBUT NULLS FIRST, TOMEFIN NULLS FIRST, ANNEEPARUTION NULLS FIRST''');
  Query.Script.Add('      INTO :REFALBUM,');
  Query.Script.Add('           :TITREALBUM,');
  Query.Script.Add('           :TOME,');
  Query.Script.Add('           :TOMEDEBUT,');
  Query.Script.Add('           :TOMEFIN,');
  Query.Script.Add('           :HORSSERIE,');
  Query.Script.Add('           :INTEGRALE,');
  Query.Script.Add('           :ANNEEPARUTION,');
  Query.Script.Add('           :REFSERIE,');
  Query.Script.Add('           :TITRESERIE');
  Query.Script.Add('      DO');
  Query.Script.Add('      BEGIN');
  Query.Script.Add('        SUSPEND;');
  Query.Script.Add('      END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_EDITEUR (');
  Query.Script.Add('    REFEDITEUR INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  FOR SELECT a.REFALBUM,');
  Query.Script.Add('             a.TITREALBUM,');
  Query.Script.Add('             a.TOME,');
  Query.Script.Add('             a.TOMEDEBUT,');
  Query.Script.Add('             a.TOMEFIN,');
  Query.Script.Add('             a.HORSSERIE,');
  Query.Script.Add('             a.INTEGRALE,');
  Query.Script.Add('             a.ANNEEPARUTION,');
  Query.Script.Add('             a.REFSERIE,');
  Query.Script.Add('             s.TITRESERIE');
  Query.Script.Add('      from albums a LEFT join editions e on a.refalbum = e.refalbum');
  Query.Script.Add('                    LEFT join series s on a.refserie = s.refserie');
  Query.Script.Add('      WHERE e.refediteur = :refediteur');
  Query.Script.Add
    ('      ORDER BY UPPERTITREALBUM, UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, TOMEDEBUT NULLS FIRST, TOMEFIN NULLS FIRST, ANNEEPARUTION NULLS FIRST');
  Query.Script.Add('      INTO :REFALBUM,');
  Query.Script.Add('           :TITREALBUM,');
  Query.Script.Add('           :TOME,');
  Query.Script.Add('           :TOMEDEBUT,');
  Query.Script.Add('           :TOMEFIN,');
  Query.Script.Add('           :HORSSERIE,');
  Query.Script.Add('           :INTEGRALE,');
  Query.Script.Add('           :ANNEEPARUTION,');
  Query.Script.Add('           :REFSERIE,');
  Query.Script.Add('           :TITRESERIE');
  Query.Script.Add('  DO');
  Query.Script.Add('  BEGIN');
  Query.Script.Add('    SUSPEND;');
  Query.Script.Add('  END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_GENRE (');
  Query.Script.Add('    REFGENRE INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE SWHERE VARCHAR(25);');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  if (:RefGenre = -1) then sWhere = ''RefGenre is null '';');
  Query.Script.Add('                      else sWhere = ''refgenre = '' || :refgenre;');
  Query.Script.Add('  for execute statement');
  Query.Script.Add('      ''SELECT REFALBUM,');
  Query.Script.Add('             TITREALBUM,');
  Query.Script.Add('             TOME,');
  Query.Script.Add('             TOMEDEBUT,');
  Query.Script.Add('             TOMEFIN,');
  Query.Script.Add('             HORSSERIE,');
  Query.Script.Add('             INTEGRALE,');
  Query.Script.Add('             ANNEEPARUTION,');
  Query.Script.Add('             a.REFSERIE,');
  Query.Script.Add('             TITRESERIE');
  Query.Script.Add('       FROM VW_LISTE_ALBUMS a LEFT JOIN GENRESERIES gs ON gs.refserie = a.refserie');
  Query.Script.Add('                              LEFT JOIN GENRES g ON gs.refgenre = g.refgenre');
  Query.Script.Add('       WHERE '' || :sWHERE ||');
  Query.Script.Add
    ('      ''ORDER BY UPPERTITREALBUM, UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, TOMEDEBUT NULLS FIRST, TOMEFIN NULLS FIRST, ANNEEPARUTION NULLS FIRST''');
  Query.Script.Add('       INTO :REFALBUM,');
  Query.Script.Add('            :TITREALBUM,');
  Query.Script.Add('            :TOME,');
  Query.Script.Add('            :TOMEDEBUT,');
  Query.Script.Add('            :TOMEFIN,');
  Query.Script.Add('            :HORSSERIE,');
  Query.Script.Add('            :INTEGRALE,');
  Query.Script.Add('            :ANNEEPARUTION,');
  Query.Script.Add('            :REFSERIE,');
  Query.Script.Add('            :TITRESERIE');
  Query.Script.Add('      DO');
  Query.Script.Add('      BEGIN');
  Query.Script.Add('        SUSPEND;');
  Query.Script.Add('      END');
  Query.Script.Add('END;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_BY_INITIALE (');
  Query.Script.Add('    INITIALE CHAR(1))');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFALBUM INTEGER,');
  Query.Script.Add('    TITREALBUM VARCHAR(150),');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    TOMEDEBUT SMALLINT,');
  Query.Script.Add('    TOMEFIN SMALLINT,');
  Query.Script.Add('    HORSSERIE SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT,');
  Query.Script.Add('    ANNEEPARUTION SMALLINT,');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150))');
  Query.Script.Add('AS');
  Query.Script.Add('BEGIN');
  Query.Script.Add('  FOR SELECT a.REFALBUM,');
  Query.Script.Add('             a.TITREALBUM,');
  Query.Script.Add('             a.TOME,');
  Query.Script.Add('             a.TOMEDEBUT,');
  Query.Script.Add('             a.TOMEFIN,');
  Query.Script.Add('             a.HORSSERIE,');
  Query.Script.Add('             a.INTEGRALE,');
  Query.Script.Add('             a.ANNEEPARUTION,');
  Query.Script.Add('             a.REFSERIE,');
  Query.Script.Add('             s.TITRESERIE');
  Query.Script.Add('      FROM ALBUMS a INNER JOIN SERIES s ON s.refserie = a.refserie');
  Query.Script.Add('      WHERE a.initialetitrealbum = :INITIALE');
  Query.Script.Add
    ('      ORDER BY UPPERTITREALBUM, UPPERTITRESERIE, HORSSERIE NULLS FIRST, INTEGRALE NULLS FIRST, TOME NULLS FIRST, TOMEDEBUT NULLS FIRST, TOMEFIN NULLS FIRST, ANNEEPARUTION NULLS FIRST');
  Query.Script.Add('      INTO :REFALBUM,');
  Query.Script.Add('           :TITREALBUM,');
  Query.Script.Add('           :TOME,');
  Query.Script.Add('           :TOMEDEBUT,');
  Query.Script.Add('           :TOMEFIN,');
  Query.Script.Add('           :HORSSERIE,');
  Query.Script.Add('           :INTEGRALE,');
  Query.Script.Add('           :ANNEEPARUTION,');
  Query.Script.Add('           :REFSERIE,');
  Query.Script.Add('           :TITRESERIE');
  Query.Script.Add('  DO');
  Query.Script.Add('  BEGIN');
  Query.Script.Add('    SUSPEND;');
  Query.Script.Add('  END');
  Query.Script.Add('END;');

  Query.Script.Add('CREATE PROCEDURE LISTE_TOMES (');
  Query.Script.Add('    WITHINTEGRALE SMALLINT)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    TOME SMALLINT,');
  Query.Script.Add('    INTEGRALE SMALLINT)');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE TOMEDEBUT INTEGER;');
  Query.Script.Add('DECLARE VARIABLE TOMEFIN INTEGER;');
  Query.Script.Add('begin');
  Query.Script.Add('  for');
  Query.Script.Add('    select refserie, tome, integrale');
  Query.Script.Add('    from albums');
  Query.Script.Add('    where TOME is not null and integrale = 0 and horsserie = 0');
  Query.Script.Add('    order by refserie, tome');
  Query.Script.Add('    into :REFSERIE, :TOME, :INTEGRALE');
  Query.Script.Add('    do');
  Query.Script.Add('      suspend;');
  Query.Script.Add('');
  Query.Script.Add('  if (withintegrale = 1) then');
  Query.Script.Add('    for');
  Query.Script.Add('      select refserie, tomedebut, tomefin, integrale');
  Query.Script.Add('      from albums');
  Query.Script.Add('      where TOMEDEBUT is not null and TOMEFIN is not null and integrale = 1 and horsserie = 0');
  Query.Script.Add('      order by refserie, tomedebut, tomefin');
  Query.Script.Add('      into :REFSERIE, :TOMEDEBUT, :TOMEFIN, :INTEGRALE');
  Query.Script.Add('      do begin');
  Query.Script.Add('        TOME = TOMEDEBUT - 1;');
  Query.Script.Add('        while (TOME <> TOMEFIN) do begin');
  Query.Script.Add('          TOME = TOME + 1;');
  Query.Script.Add('          suspend;');
  Query.Script.Add('        end');
  Query.Script.Add('      end');
  Query.Script.Add('end;');

  Query.Script.Add('ALTER PROCEDURE ALBUMS_MANQUANTS (');
  Query.Script.Add('    INTEGRALE INTEGER)');
  Query.Script.Add('RETURNS (');
  Query.Script.Add('    REFSERIE INTEGER,');
  Query.Script.Add('    COUNTSERIE INTEGER,');
  Query.Script.Add('    TITRESERIE VARCHAR(150),');
  Query.Script.Add('    UPPERTITRESERIE VARCHAR(150),');
  Query.Script.Add('    TOME INTEGER,');
  Query.Script.Add('    REFEDITEUR INTEGER,');
  Query.Script.Add('    NOMEDITEUR VARCHAR(50),');
  Query.Script.Add('    REFCOLLECTION INTEGER,');
  Query.Script.Add('    NOMCOLLECTION VARCHAR(50))');
  Query.Script.Add('AS');
  Query.Script.Add('DECLARE VARIABLE MAXSERIE INTEGER;');
  Query.Script.Add('DECLARE VARIABLE CURRENTTOME INTEGER;');
  Query.Script.Add('DECLARE VARIABLE OWNEDTOME INTEGER;');
  Query.Script.Add('begin');
  Query.Script.Add('  if (integrale is null) then integrale = 1;');
  Query.Script.Add('  for select');
  Query.Script.Add('        A.REFSERIE,');
  Query.Script.Add('        max(TOME),');
  Query.Script.Add('        count(distinct TOME),');
  Query.Script.Add('        S.REFEDITEUR,');
  Query.Script.Add('        NOMEDITEUR,');
  Query.Script.Add('        S.REFCOLLECTION,');
  Query.Script.Add('        NOMCOLLECTION');
  Query.Script.Add('      from liste_tomes(:integrale) A inner join SERIES S on A.REFSERIE = S.REFSERIE');
  Query.Script.Add('                                     left join EDITEURS E on S.REFEDITEUR = E.REFEDITEUR');
  Query.Script.Add('                                     left join COLLECTIONS C on S.REFCOLLECTION = C.REFCOLLECTION');
  Query.Script.Add('      where S.COMPLETE = 0');
  Query.Script.Add('      group by A.REFSERIE, UPPERTITRESERIE, UPPERNOMEDITEUR, UPPERNOMCOLLECTION,');
  Query.Script.Add('               S.REFEDITEUR, NOMEDITEUR, S.REFCOLLECTION, NOMCOLLECTION');
  Query.Script.Add('      order by UPPERTITRESERIE, UPPERNOMEDITEUR, UPPERNOMCOLLECTION');
  Query.Script.Add('      into');
  Query.Script.Add('        :REFSERIE,');
  Query.Script.Add('        :MAXSERIE,');
  Query.Script.Add('        :COUNTSERIE,');
  Query.Script.Add('        :REFEDITEUR,');
  Query.Script.Add('        :NOMEDITEUR,');
  Query.Script.Add('        :REFCOLLECTION,');
  Query.Script.Add('        :NOMCOLLECTION');
  Query.Script.Add('  do begin');
  Query.Script.Add('    if (COUNTSERIE <> MAXSERIE) then begin');
  Query.Script.Add('      CURRENTTOME = 0;');
  Query.Script.Add('      for select distinct');
  Query.Script.Add('            UPPERTITRESERIE,');
  Query.Script.Add('            TITRESERIE,');
  Query.Script.Add('            TOME');
  Query.Script.Add('          from liste_tomes(:integrale) A inner join SERIES S on A.REFSERIE = S.REFSERIE and S.REFSERIE = :REFSERIE');
  Query.Script.Add('          order by TOME');
  Query.Script.Add('          into');
  Query.Script.Add('            :UPPERTITRESERIE,');
  Query.Script.Add('            :TITRESERIE,');
  Query.Script.Add('            :OWNEDTOME');
  Query.Script.Add('      do begin');
  Query.Script.Add('        CURRENTTOME = CURRENTTOME + 1;');
  Query.Script.Add('        while ((CURRENTTOME <> OWNEDTOME) and (CURRENTTOME < MAXSERIE)) do begin');
  Query.Script.Add('          TOME = CURRENTTOME;');
  Query.Script.Add('          suspend;');
  Query.Script.Add('          CURRENTTOME = CURRENTTOME + 1;');
  Query.Script.Add('        end');
  Query.Script.Add('      end');
  Query.Script.Add('    end');
  Query.Script.Add('  end');
  Query.Script.Add('end;');

  Query.ExecuteScript;
end;

initialization

RegisterFBUpdate('0.0.2.5', @MAJ0_0_2_5);

end.
