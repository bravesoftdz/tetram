unit uPSC_BdtkRegEx;

{
  This file has been generated by UnitParser v0.7, written by M. Knight
  and updated by NP. v/d Spek and George Birbilis.
  Source Code from Carlo Kok has been used to implement various sections of
  UnitParser. Components of ROPS are used in the construction of UnitParser,
  code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface

uses uPSCompiler;

procedure SIRegister_TBdtkRegEx(CL: TPSPascalCompiler);
procedure SIRegister_BdtkRegEx(CL: TPSPascalCompiler);

implementation

uses BdtkRegEx;

procedure SIRegister_TBdtkRegEx(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TCaptureRange', 'record FirstPos: Integer; LastPos: Integer; end;');
  with CL.AddClass(CL.FindClass('TOBJECT'), TBdtkRegEx) do
  begin
    RegisterPublishedProperties;
    RegisterMethod('Constructor Create');
    RegisterMethod('function BeginSearch(const Chaine, aRegEx: string): Boolean');
    RegisterMethod('function Find(var Chaine: string): Boolean');
    RegisterMethod('function Next: Boolean');
    RegisterMethod('function Match: Boolean');
    RegisterMethod('function GetCaptureByName(const Group: string): string;');
  end;
end;

procedure SIRegister_BdtkRegEx(CL: TPSPascalCompiler);
begin
  SIRegister_TBdtkRegEx(CL);
  CL.AddDelphiFunction('function MatchRegEx(const Chaine, aRegEx: string): Boolean');
  CL.AddDelphiFunction('function ExtractRegEx(const Chaine, aRegEx: string): string');
  CL.AddDelphiFunction('function ExtractRegExGroup(const Chaine, aRegEx, Group: string): string');
end;

end.
