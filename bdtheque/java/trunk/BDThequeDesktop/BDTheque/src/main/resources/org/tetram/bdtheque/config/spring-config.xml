<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015, tetram.org. All Rights Reserved.
  ~ spring-config.xml
  ~ Last modified by Thierry, on 2015-01-01T16:36:19CET
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--
    géré par le bean databaseProperties (dans org.tetram.bdtheque.spring.SpringContext)
    <context:property-placeholder location="org/tetram/bdtheque/config/database.properties"/>
    -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource"
          depends-on="databaseProperties">
        <property name="suppressClose" value="true"/>
        <property name="autoCommit" value="false"/>

        <!--suppress MybatisMapperXmlInspection -->
        <property name="driverClassName" value="${database.driver}"/>
        <!--suppress MybatisMapperXmlInspection -->
        <property name="url" value="${database.url}"/>
        <!--suppress MybatisMapperXmlInspection -->
        <property name="username" value="${database.username}"/>
        <!--suppress MybatisMapperXmlInspection -->
        <property name="password" value="${database.password}"/>

        <property name="connectionProperties">
            <props>
                <prop key="encoding">UTF8</prop>
            </props>
        </property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:org/tetram/bdtheque/config/mybatis-config.xml"/>
        <!--
        en production, le "*" de classpath n'est pas nécessaire, mais impératif pour les tests
        il devient inutile pour les tests si les xml des mappers sont dans un package qui n'existe pas dans les tests
        -->
        <property name="mapperLocations" value="classpath*:org/tetram/bdtheque/data/dao/mappers/*.xml"/>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="validateExistingTransaction" value="true"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*" read-only="false" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- ensure that the above transactional advice runs for any execution of an operation defined by a service -->
    <!-- impératif si on veut que les appels internes des Dao utilisent aussi les transactions -->
    <!-- apparemment, sans ça marche quand même: les transactions sont bien passées entre appels internes -->
    <!--
        <aop:config>
            <aop:pointcut id="daoOperation" expression="execution(* org.tetram.bdtheque.data.dao.*.*(..))"/>
            <aop:pointcut id="mappersOperation" expression="execution(* org.tetram.bdtheque.data.dao.mappers.*.*(..))"/>
            <aop:advisor advice-ref="txAdvice" pointcut-ref="daoOperation"/>
            <aop:advisor advice-ref="txAdvice" pointcut-ref="mappersOperation"/>
        </aop:config>
    -->
    <aop:aspectj-autoproxy/>

    <mybatis:scan base-package="org.tetram.bdtheque.**.mappers"/>
    <context:annotation-config/>
    <!-- on scanne toute l'appli... si ça devient trop long on verra à spécifier les emplacements -->
    <context:component-scan base-package="org.tetram.bdtheque" />

    <!--
    <context:component-scan base-package="org.tetram.bdtheque.data.dao"/>
    <context:component-scan base-package="org.tetram.bdtheque.data.services"/>
    -->
<!--
    <bean id="baseMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.BaseMapperInterface"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="commonMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.CommonMapper"/>
    </bean>
    <bean id="sqlMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.SqlMapper"/>
    </bean>
    <bean id="albumMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.AlbumMapper"/>
    </bean>
    <bean id="auteurMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.AuteurMapper"/>
    </bean>
    <bean id="collectionMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.CollectionMapper"/>
    </bean>
    <bean id="editeurMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.EditeurMapper"/>
    </bean>
    <bean id="editionMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.EditionMapper"/>
    </bean>
    <bean id="genreMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.GenreMapper"/>
    </bean>
    <bean id="imageMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.ImageMapper"/>
    </bean>
    <bean id="paraBDMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.ParaBDMapper"/>
    </bean>
    <bean id="serieMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.SerieMapper"/>
    </bean>
    <bean id="universMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.UniversMapper"/>
    </bean>
    <bean id="valeurlisteMapper" parent="baseMapper">
        <property name="mapperInterface" value="org.tetram.bdtheque.data.dao.mappers.ValeurListeMapper"/>
    </bean>
    -->

    <!--
    <context:spring-configured/>
    <context:annotation-config/>
    <context:load-time-weaver/>
    -->

</beans>