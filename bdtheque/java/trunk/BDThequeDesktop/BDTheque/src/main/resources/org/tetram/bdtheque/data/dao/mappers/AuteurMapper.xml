<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014, tetram.org. All Rights Reserved.
  ~ AuteurMapper.xml
  ~ Last modified by Tetram, on 2014-08-26T15:56:17CEST
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.tetram.bdtheque.data.dao.mappers.AuteurMapper">
    <resultMap id="AbstractPersonne" type="org.tetram.bdtheque.data.bean.abstractentities.BasePersonne">
        <id column="id_personne" property="id"/>
        <result column="NomPersonne" property="nomPersonne"/>
        <result column="SiteWeb" property="siteWeb"/>
    </resultMap>
    <resultMap id="PersonneLite" extends="AbstractPersonne" type="beanPersonneLite">
    </resultMap>
    <resultMap id="PersonneFull" extends="AbstractPersonne" type="beanPersonne">
        <result column="biographie" property="biographie"/>
        <!-- trop compliquÃ© pour un mapping: construite par le DAO
        <collection property="series"/>
        -->
    </resultMap>

    <resultMap id="AuteurLite" type="org.tetram.bdtheque.data.bean.abstractentities.BaseAuteur">
        <association property="personne" resultMap="PersonneLite"/>
    </resultMap>
    <resultMap id="AuteurSerieLite" extends="AuteurLite" type="beanAuteurSerieLite">
        <id column="id_auteur_series" property="id"/>
        <result column="id_serie" property="idSerie"/>
        <result column="metier" property="metier"/>
    </resultMap>
    <resultMap id="AuteurAlbumLite" extends="AuteurSerieLite" type="beanAuteurAlbumLite">
        <id column="id_auteur" property="id"/>
        <result column="id_album" property="idAlbum"/>
    </resultMap>
    <resultMap id="AuteurParaBDLite" extends="AuteurLite" type="beanAuteurParaBDLite">
        <id column="id_auteur_paraBD" property="id"/>
        <result column="id_paraBD" property="idParaBD"/>
    </resultMap>

    <resultMap id="PersonneLiteInitialeCharacter" type="org.tetram.bdtheque.data.bean.InitialeWithEntity"
               extends="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeWithEntityCharacter">
        <association property="entity" resultMap="PersonneLite"/>
    </resultMap>

    <select id="getPersonneLiteById" resultMap="PersonneLite" parameterType="UUID">
        select
        id_personne, nomPersonne, siteWeb
        from
        personnes
        where
        id_personne = #{id}
    </select>
    <select id="getPersonneById" resultMap="PersonneFull" parameterType="UUID">
        select
        id_personne, nomPersonne, siteWeb, biographie
        from
        personnes
        where
        id_personne = #{id}
    </select>

    <select id="getListAuteurLiteByAlbum" resultMap="AuteurAlbumLite" resultOrdered="true">
        select
        p.id_personne, p.nomPersonne, p.siteWeb,
        a.id_auteur, a.id_album, a.metier
        from
        personnes p
        inner join auteurs a on
        a.id_personne = p.id_personne
        where
        a.id_album = #{idAlbum}
        order by
        a.metier, p.nomPersonne
    </select>
    <select id="getListAuteurLiteBySerie" resultMap="AuteurSerieLite" resultOrdered="true">
        select
        p.id_personne, p.nomPersonne, p.siteWeb,
        a.id_auteur_series, a.id_serie, a.metier
        from
        personnes p
        inner join auteurs_series a on
        a.id_personne = p.id_personne
        where
        a.id_serie = #{idSerie}
        order by
        a.metier, p.nomPersonne
    </select>
    <select id="getListAuteurLiteByParaBD" resultMap="AuteurParaBDLite" resultOrdered="true">
        select
        p.id_personne, p.nomPersonne, p.siteWeb,
        a.id_auteur_parabd, a.id_parabd
        from
        personnes p
        inner join auteurs_parabd a on
        a.id_personne = p.id_personne
        where
        a.id_parabd = #{idParaBD}
        order by
        p.nomPersonne
    </select>

    <select id="getInitiales" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityCharacter">
        select
        initialeNomPersonne "label", countInitiale "count", initialeNomPersonne "value"
        from
        vw_initiales_personnes
    </select>
    <select id="getListPersonneLiteByInitiale" resultMap="PersonneLite">
        select
        id_personne, nomPersonne
        from
        personnes_by_initiale(#{initiale})
    </select>
    <select id="searchListPersonneLiteByInitiale" resultMap="PersonneLiteInitialeCharacter" resultOrdered="true">
        <![CDATA[
        select
            p.id_personne initiale_key, p.initialeNomPersonne initiale_value,
            p.id_personne, p.nomPersonne
        from
            personnes p
        where
            p.nomPersonne like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            p.initialeNomPersonne, p.nomPersonne
        ]]>
    </select>

    <select id="checkUniquePersonne" resultType="UUID">
        <![CDATA[
        select
            id_personne
        from
            personnes
        where
            nomPersonne = #{nomPersonne}
        ]]>
        <if test="id != null">
            <![CDATA[
            and id_personne <> #{id}
            ]]>
        </if>
    </select>

    <sql id="savePersonne">
        update or insert into personnes (
        id_personne, nomPersonne, siteWeb, biographie
        ) values (
        #{id}, #{nomPersonne}, #{siteWeb}, #{biographie}
        )
    </sql>

    <insert id="createPersonne">
        <selectKey keyProperty="id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <include refid="savePersonne"/>
    </insert>

    <update id="updatePersonne">
        <include refid="savePersonne"/>
    </update>

    <delete id="deletePersonne">
        delete from personnes where id_personne = #{id}
    </delete>

    <delete id="cleanAuteursAlbum">
        delete from auteurs where id_album = #{id}
    </delete>
    <insert id="addAuteurAlbum">
        <selectKey keyProperty="auteur.id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <![CDATA[
        insert into auteurs (
            id_auteur, id_album, metier, id_personne
        ) values (
            #{auteur.id}, #{idSerie}, #{auteur.metier}, #{auteur.personne.id}
        )
        ]]>
    </insert>

    <delete id="cleanAuteursSerie">
        delete from auteurs_series where id_serie = #{id}
    </delete>
    <insert id="addAuteurSerie">
        <selectKey keyProperty="auteur.id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <![CDATA[
        insert into auteurs_series (
            id_auteur_series, id_serie, metier, id_personne
        ) values (
            #{auteur.id}, #{idSerie}, #{auteur.metier}, #{auteur.personne.id}
        )
        ]]>
    </insert>

    <delete id="cleanAuteursParaBD">
        delete from auteurs_parabd where id_parabd = #{id}
    </delete>
    <insert id="addAuteurParaBD">
        <selectKey keyProperty="auteur.id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <![CDATA[
        insert into auteurs_parabd (
            id_auteur_parabd, id_parabd, id_personne
        ) values (
            #{auteur.id}, #{idSerie}, #{auteur.personne.id}
        )
        ]]>
    </insert>

</mapper>
