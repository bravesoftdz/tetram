<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014, tetram.org. All Rights Reserved.
  ~ AlbumMapper.xml
  ~ Last modified by Tetram, on 2014-08-26T15:56:17CEST
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.tetram.bdtheque.data.dao.mappers.AlbumMapper">
    <resultMap id="AbstractAlbum" type="org.tetram.bdtheque.data.bean.abstractentities.BaseAlbum">
        <id column="id_album" property="id"/>
        <result column="titreAlbum" property="titreAlbum"/>
        <result column="AnneeParution" property="anneeParution"/>
        <result column="MoisParution" property="moisParution"/>
        <result column="tome" property="tome"/>
        <result column="TomeDebut" property="tomeDebut"/>
        <result column="TomeFin" property="tomeFin"/>
        <result column="integrale" property="integrale"/>
        <result column="HorsSerie" property="horsSerie"/>
        <result column="notation" property="notation"/>
        <result column="complet" property="complet"/>
    </resultMap>
    <resultMap id="AlbumLite" extends="AbstractAlbum" type="beanAlbumLite">
        <result column="id_serie" property="idSerie"/>
        <result column="id_editeur" property="idEditeur"/>
        <result column="TitreSerie" property="titreSerie"/>
        <result column="NomEditeur" property="editeur"/>
        <result column="stock" property="stock"/>
        <result column="achat" property="achat"/>
    </resultMap>
    <resultMap id="AlbumFull" extends="AbstractAlbum" type="beanAlbum">
        <result column="SujetAlbum" property="sujet"/>
        <result column="RemarquesAlbum" property="notes"/>
        <association property="serie" select="org.tetram.bdtheque.data.dao.mappers.SerieMapper.getSerieById"
                     column="id_serie"/>
        <collection property="univers"
                    select="org.tetram.bdtheque.data.dao.mappers.UniversMapper.getListUniversLiteByAlbum"
                    column="id_album" fetchType="eager"/>
        <collection property="editions"
                    select="org.tetram.bdtheque.data.dao.mappers.EditionMapper.getListEditionByAlbum"
                    column="{id=id_album}"/>
        <collection property="auteurs"
                    select="org.tetram.bdtheque.data.dao.mappers.AuteurMapper.getListAuteurLiteByAlbum"
                    column="{idAlbum=id_album}" fetchType="eager"/>
    </resultMap>

    <resultMap id="AlbumLiteInitialeUUID" type="org.tetram.bdtheque.data.bean.InitialeWithEntity"
               extends="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeWithEntityUUID">
        <association property="entity" resultMap="AlbumLite"/>
    </resultMap>
    <resultMap id="AlbumLiteInitialeYear" type="org.tetram.bdtheque.data.bean.InitialeWithEntity"
               extends="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeWithEntityYear">
        <association property="entity" resultMap="AlbumLite"/>
    </resultMap>
    <resultMap id="AlbumLiteInitialeCharacter" type="org.tetram.bdtheque.data.bean.InitialeWithEntity"
               extends="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeWithEntityCharacter">
        <association property="entity" resultMap="AlbumLite"/>
    </resultMap>

    <sql id="fieldsAlbumLite">
        a.id_album, a.titreAlbum, a.horsSerie, a.integrale, a.tome, a.tomeDebut, a.tomeFin, a.id_serie, a.achat,
        a.complet, a.notation
    </sql>
    <sql id="orderAlbum">
        a.horsSerie nulls first, a.integrale nulls first, a.tome nulls first, a.anneeParution, a.moisParution
    </sql>

    <select id="getAlbumLiteById" resultMap="AlbumLite">
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <if test="idEdition != null">
            , e.stock
        </if>
        <![CDATA[
        from
            vw_liste_albums a
        ]]>
        <if test="idEdition != null">
            <![CDATA[
            inner join editions e on
                a.id_album = e.id_album
            ]]>
        </if>
        <![CDATA[
        where
            a.id_album = #{id}
        ]]>
        <if test="idEdition != null">
            <![CDATA[
            and e.id_edition = #{idEdition}
            ]]>
        </if>
    </select>
    <select id="getAlbumById" parameterType="UUID" resultMap="AlbumFull">
        select
        a.id_album, a.titreAlbum, a.horsSerie, a.integrale, a.tome, a.tomeDebut, a.tomeFin, a.id_serie,
        a.complet, a.sujetAlbum, a.remarquesAlbum, a.moisParution, a.anneeParution,
        a.notation, n.libelle as lb_notation
        from
        albums a
        left join listes n on
        (n.ref = a.notation and n.categorie = 9)
        where
        a.id_album = #{id}
    </select>
    <select id="getListAlbumLiteBySerieByAuteur" parameterType="map" resultMap="AlbumLite" resultOrdered="true">
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie, n.libelle as lb_notation
        <![CDATA[
        from
            vw_liste_albums a
            left join listes n on
                (n.ref = a.notation and n.categorie = 9)
        ]]>
        <where>
            <choose>
                <when test="idSerie == null">
                    (a.id_serie is null or a.id_serie = #{idSerie})
                </when>
                <otherwise>
                    a.id_serie = #{idSerie}
                </otherwise>
            </choose>
            <if test="idAuteur != null">
                and a.id_album in (select id_album from auteurs where id_personne = #{idAuteur})
            </if>
        </where>
        order by
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitiales" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityCharacter">
        select
        initialeTitreAlbum "label", countInitiale "count", initialeTitreAlbum "value"
        from
        initiales_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteByInitiale" resultMap="AlbumLite">
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_initiale(#{initiale}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteByInitiale" resultMap="AlbumLiteInitialeCharacter" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.initialeTitreAlbum initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitialesSeries" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityUUID">
        select
        titreSerie "label", countSerie "count", id_serie "value"
        from
        series_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteBySerie" resultMap="AlbumLite">
        <if test="idSerie == null">
            <bind name="idSerie" value="''"/>
        </if>
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_serie(#{idSerie}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteBySerie" resultMap="AlbumLiteInitialeUUID" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.id_serie initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            a.titreSerie nulls first, coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitialesCollections"
            resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityUUID">
        select
        nomCollection "label", countCollection "count", id_collection "value"
        from
        collections_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteByCollection" resultMap="AlbumLite">
        <!--
            TODO: modifier la procédure stockée ALBUMS_BY_COLLECTION pour qu'elle utilise la vue VW_LISTE_COLLECTIONS_ALBUMS
                    ou qu'elle teste id_collection sur la table COLLECTIONS par un left join
        -->
        <if test="idCollection == null">
            <bind name="idCollection" value="''"/>
        </if>
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_collection(#{idCollection}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteByCollection" resultMap="AlbumLiteInitialeUUID" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.id_collection initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_collections_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            a.nomCollection nulls first, coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitialesEditeurs" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityUUID">
        select
        nomEditeur "label", countEditeur "count", id_editeur "value"
        from
        editeurs_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteByEditeur" resultMap="AlbumLite">
        <if test="idEditeur == null">
            <bind name="idEditeur" value="''"/>
        </if>
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_editeur(#{idEditeur}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteByEditeur" resultMap="AlbumLiteInitialeUUID" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.id_editeur initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_editeurs_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            a.nomEditeur nulls first, coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitialesGenres" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityUUID">
        select
        genre "label", countGenre "count", id_genre "value"
        from
        genres_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteByGenre" resultMap="AlbumLite">
        <if test="idGenre == null">
            <bind name="idGenre" value="''"/>
        </if>
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_genre(#{idGenre}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteByGenre" resultMap="AlbumLiteInitialeUUID" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.id_genre initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_genres_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            a.genre nulls first, coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <select id="getInitialesAnnees" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityYear">
        select
        anneeParution "label", countAnnee "count", nullif(anneeParution, -1) "value"
        from
        annees_albums(#{filtre})
    </select>
    <select id="getListAlbumLiteByAnnee" resultMap="AlbumLite">
        <if test="annee == null">
            <bind name="annee" value="-1"/>
        </if>
        select
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            albums_by_annee(#{annee}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListAlbumLiteByAnnee" resultMap="AlbumLiteInitialeYear" resultOrdered="true">
        <![CDATA[
        select
            a.id_album initiale_key, a.anneeParution initiale_value,
        ]]>
        <include refid="fieldsAlbumLite"/>, a.titreSerie
        <![CDATA[
        from
            vw_liste_albums a
        where
            coalesce(a.titreAlbum, a.titreSerie) like '%' || #{value} || '%'
        ]]>
        <if test="filtre != null">
            and ${filtre}
        </if>
        <![CDATA[
        order by
            a.anneeParution nulls first, coalesce(a.titreAlbum, a.titreSerie),
        ]]>
        <include refid="orderAlbum"/>
    </select>

    <update id="changeNotation">
        update albums set notation = #{notation} where id_album = #{id}
    </update>
    <update id="acheter">
        update albums set achat = #{achat} where id_album = #{id}
    </update>

    <sql id="saveAlbum">
        update or insert into albums (
        id_album, titreAlbum, moisParution, anneeParution, id_serie, tome, tomeDebut, tomeFin,
        horsSerie, integrale, sujetAlbum, remarquesAlbum
        ) values (
        #{id}, #{titreAlbum}, #{moisParution}, #{anneeParution}, #{idSerie}, #{tome}, #{tomeDebut}, #{tomeFin},
        #{horsSerie}, #{integrale}, #{sujet}, #{notes}
        )
    </sql>

    <insert id="createAlbum">
        <selectKey keyProperty="id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <include refid="saveAlbum"/>
    </insert>

    <update id="updateAlbum">
        <include refid="saveAlbum"/>
    </update>

    <delete id="deleteAlbum">
        delete from albums where id_album = #{id}
    </delete>

</mapper>

