<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014, tetram.org. All Rights Reserved.
  ~ ParaBDMapper.xml
  ~ Last modified by Tetram, on 2014-08-26T15:56:17CEST
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.tetram.bdtheque.data.dao.mappers.ParaBDMapper">
    <resultMap id="ParaBDLite" type="beanParaBDLite">
        <id column="id_paraBD" property="id"/>
        <result column="titreParaBD" property="titreParaBD"/>
        <result column="id_serie" property="idSerie"/>
        <result column="titreserie" property="titreSerie"/>
        <result column="achat" property="achat"/>
        <result column="complet" property="complet"/>
        <result column="sCategorie" property="sCategorie"/>
    </resultMap>
    <resultMap id="ParaBDFull" type="beanParaBD">
        <id column="id_paraBD" property="id"/>
        <result column="TitreParaBD" property="titreParaBD"/>
        <result column="annee" property="anneeEdition"/>
        <result column="description" property="description"/>
        <result column="notes" property="notes"/>
        <result column="prix" property="prix"/>
        <result column="dedicace" property="dedicace"/>
        <result column="numerote" property="numerote"/>
        <result column="offert" property="offert"/>
        <result column="gratuit" property="gratuit"/>
        <result column="stock" property="stock"/>
        <result column="dateAchat" property="dateAchat"/>
        <result column="anneeCote" property="anneeCote"/>
        <result column="prixCote" property="prixCote"/>
        <result column="categorieParaBD" property="categorieParaBD"/>
        <association property="serie" select="org.tetram.bdtheque.data.dao.mappers.SerieMapper.getSerieById"
                     column="id_serie"/>
        <collection property="univers"
                    select="org.tetram.bdtheque.data.dao.mappers.UniversMapper.getListUniversLiteByParaBD"
                    column="id_paraBD" fetchType="eager"/>
        <collection property="photos"
                    select="org.tetram.bdtheque.data.dao.mappers.ImageMapper.getListPhotoLiteByParaBD"
                    column="id_paraBD"/>
        <collection property="auteurs"
                    select="org.tetram.bdtheque.data.dao.mappers.AuteurMapper.getListAuteurLiteByParaBD"
                    column="{idParaBD=id_paraBD}"/>
    </resultMap>

    <resultMap id="ParaBDLiteInitialeUUID" type="org.tetram.bdtheque.data.bean.InitialeWithEntity"
               extends="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeWithEntityUUID">
        <association property="entity" resultMap="ParaBDLite"/>
    </resultMap>

    <select id="getParaBDLiteById" resultMap="ParaBDLite">
    </select>

    <select id="getParaBDById" resultMap="ParaBDFull">
        select
        p.id_paraBD, p.titreParaBD, p.annee, p.id_serie, p.achat, p.description, p.notes, p.dedicace, p.numerote,
        p.anneeCote, p.prixCote,
        p.gratuit, p.offert, p.dateAchat, p.prix, p.stock, p.categorieParaBD, lc.libelle as lb_categorieParaBD
        from
        paraBD p
        left join listes lc on
        (lc.ref = p.categorieParaBD and lc.categorie = 7)
        where
        id_paraBD = #{id}
    </select>

    <select id="getListParaBDLiteBySerieByAuteur" parameterType="map" resultMap="ParaBDLite" resultOrdered="true">
        <![CDATA[
        select
            id_paraBD, titreParaBD, id_serie, titreSerie, achat, complet, sCategorie
        from
            vw_liste_parabd
        ]]>
        <where>
            <choose>
                <when test="idSerie == null">(id_serie is null or id_serie = #{idSerie})</when>
                <otherwise>id_serie = #{idSerie}</otherwise>
            </choose>
            <if test="idAuteur != null">
                and id_paraBD in (select id_paraBD from auteurs_paraBD where id_personne = #{idAuteur})
            </if>
        </where>
        <![CDATA[
        order by
            titreParaBD
        ]]>
    </select>

    <select id="getInitialesSeries" resultMap="org.tetram.bdtheque.data.dao.mappers.CommonMapper.InitialeEntityUUID">
        select
        titreSerie "label", countSerie "count", id_serie "value"
        from
        series_parabd(#{filtre})
    </select>
    <select id="getListParaBDLiteBySerie" resultMap="ParaBDLite">
        <if test="idSerie == null">
            <bind name="idSerie" value="''"/>
        </if>
        <![CDATA[
        select
            id_parabd, titreParabd, id_serie, titreSerie, achat, complet, sCategorie
        from
            parabd_by_serie(#{idSerie}, #{filtre}) a
        ]]>
    </select>
    <select id="searchListParaBDLiteBySerie" resultMap="ParaBDLiteInitialeUUID" resultOrdered="true">
        select
        p.id_parabd initiale_key, p.id_serie initiale_value,
        p.id_parabd, p.titreParaBD
        from
        vw_liste_parabd p
        where
        coalesce(p.titreParaBD, p.titreSerie) like '%' || #{value} || '%'
        <if test="filtre != null">
            and ${filtre}
        </if>
        order by
        p.titreSerie nulls first, coalesce(p.titreParaBD, p.titreSerie)
    </select>

    <update id="acheter">
        update paraBD set achat = #{achat} where id_paraBD = #{id}
    </update>

    <sql id="saveParaBD">
        update or insert into parabd (
        id_parabd, titreParabd, annee, id_serie, categorieParaBD, dedicace, numerote, anneeCote,
        prixCote, gratuit, offert, dateAchat, prix, stock, description, notes, complet
        ) values (
        #{id}, #{titreParabd}, #{annee}, #{idSerie}, #{categorieParaBD}, #{dedicace}, #{numerote}, #{anneeCote},
        #{prixCote}, #{gratuit}, #{offert}, #{dateAchat}, #{prix}, #{stock}, #{description}, #{notes}, 1
        )
    </sql>

    <insert id="createParaBD">
        <selectKey keyProperty="id" order="BEFORE" resultType="UUID">
            <include refid="org.tetram.bdtheque.data.dao.mappers.CommonMapper.autoIncKey"/>
        </selectKey>
        <include refid="saveParaBD"/>
    </insert>

    <update id="updateParaBD">
        <include refid="saveParaBD"/>
    </update>

    <delete id="deleteParaBD">
        delete from ParaBD where id_paraBD = #{id}
    </delete>

</mapper>